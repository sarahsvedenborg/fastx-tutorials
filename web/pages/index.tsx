import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import client from "../client";
import BackgroundBottom from "../components/icons/backgroundBottom";
import MobileBubbles from "../components/icons/mobileBubbles";

interface HomeProps {
  homepage: {
    title: string;
    subtitle: string;
  }
  tutorials: any[];
  isDarkMode: boolean;
}

export default function Home({ homepage, tutorials, isDarkMode }: HomeProps) {

/*   const setBackground = (index: number) => {
    return {
      backgroundImage: `url(tutorialBackgrounds/background${index}.svg);`,
    };
  }; */
  const setBackground = (index:number) => `background${index}`

  return (
    <div
      className={["container", isDarkMode ? "themeDark" : "themeLight"].join(
        " "
      )}
    >
      <Head>
        <title>Tutorials</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <div className="heroWrapper">
          <div className="hero">
            <div className="child">
              <p className="tagline">
                {homepage.subtitle}
              </p>
              <h1 className="title heading">{homepage.title}</h1>
            </div>
            <div className="child image">
              <object data="headerBackground2.svg" className="fullWidthImage" />
              <object data="mobileBubbles.svg" className="mobileImage" />
              {/*        <MobileBubbles /> */}
            </div>
          </div>
        </div>
        <BackgroundBottom />

        <div className="tutorials">
          <ul>
            {Array.isArray(tutorials) &&
              tutorials.map((tutorial, i) => (
                <li key={tutorial.slug.current} className={'background'+(i+1)}>
                  <Link href={`/tutorial/${tutorial.slug.current}`}>
                    <a>
                      <div className="course">
                        <h6>{tutorial.scopeType}</h6>
                        <h4>{tutorial.title}</h4>
                      </div>
                    </a>
                  </Link>
                </li>
              ))}
          </ul>
        </div>
      </main>
    </div>
  );
}

export async function getStaticProps({ locale }: any) {
  const tutorials = await client.fetch(
    `
      *[_type == "tutorial"]|order(scopeType desc){slug, 'title': ${locale.substr(0,2)}.title, 'scopeType': ${locale.substr(0,2)}.scopeType}
    `
  );
  const homepage = await client.fetch(`*[_type == 'home'][0]{'body': ${locale.substr(0,2)}}`)

  // By returning { props: { tutorial } }, the Tutorial component
  // will receive `tutorial` as a prop at build time
  return {
    props: {
      homepage: homepage.body,
      tutorials,
      locale,
    },
  };
}
